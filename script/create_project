#!/usr/bin/env ruby
require File.expand_path('../../config/environment',  __FILE__)

project_name = ARGV[0]
fail("Usage:  #{File.basename(__FILE__)} new_project_name")     unless project_name
fail("Project name must only contain [a-z0-9_]")                unless project_name =~ /^[a-z0-9_]+$/

base_directory    = Pathname.new(File.join(File.dirname(__FILE__), '..', '..')).realpath
project_directory = base_directory + project_name
fail("Project directory (#{project_directory}) already exists") if project_directory.exist?

local_url     = File.expand_path(File.join(File.dirname(__FILE__), '..'))
template_url  = "git://github.com/thoughtbot/suspenders.git"
changeconst   = "Fire_coverage"
changeme      = "fire_coverage"
changesession = "CHANGESESSION"

def run(cmd)
  puts "Running '#{cmd}'"
  out = `#{cmd}`
  if $? != 0
    fail "Command #{cmd} failed: #$?\n#{out}"
  end
  out
end

def search_and_replace(file, search, replace)
  if File.file?(file)
    contents = File.read(file)
    if contents[search]
      puts "Replacing #{search} with #{replace} in #{file}"
      contents.gsub!(search, replace)
      File.open(file, "w") { |f| f << contents }
    end
  end
end

def installed?(gem_name)
  installed_gems = Gem.source_index.find_name(gem_name)
  installed_gems.any?
end

run("mkdir #{project_directory}")
Dir.chdir(project_directory) or fail("Couldn't change to #{project_directory}")
run("git init")
run("git remote add local-suspenders #{local_url}")
run("git pull local-suspenders rails3")
run("git remote rm local-suspenders")
run("git remote add suspenders #{template_url}")
run("git pull suspenders rails3")

Dir.glob("#{project_directory}/**/*").each do |file|
  search_and_replace(file, changeme, project_name)
end

Dir.glob("#{project_directory}/**/*").each do |file|
  search_and_replace(file, changeconst, project_name.capitalize)
end

Dir.glob("#{project_directory}/config/initializers/secret_store.rb").each do |file|
  search_and_replace(file, changesession, ActiveSupport::SecureRandom.hex(30))
end

commands = <<EOF
git commit -a -m 'Initial commit'
bundle install
bundle exec rake db:create
rails generate clearance
rails generate clearance_features -f
rails generate clearance_views -f
bundle exec rake db:migrate
git add .
git commit -m 'installed clearance'
EOF

commands.split("\n").each do |command|
  run(command)
end

puts
puts "Now login to github and add a new project named '#{project_name.humanize.titleize}'"
